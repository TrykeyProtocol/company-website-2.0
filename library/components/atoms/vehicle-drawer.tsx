"use client";

import React from "react";
import Image from "next/image";
import { CircleGauge, UserRound, Clock, MapPin } from "lucide-react";
import { Button } from "@/library/components/atoms/button-cn";
import {
  Drawer,
  DrawerContent,
  DrawerHeader,
  DrawerTitle,
  DrawerDescription,
  DrawerFooter,
} from "@/library/components/atoms/drawer";
import { Vehicle } from "@/library/types/assets";
import { getMarkerColor, formatDriving } from "@/library/utils/map-helpers";

interface VehicleDrawerProps {
  isOpen: boolean;
  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;
  vehicle: Vehicle;
  onViewVehicle: (vehicleId: string) => void;
}

const VehicleDrawer: React.FC<VehicleDrawerProps> = ({
  isOpen,
  setIsOpen,
  vehicle,
  onViewVehicle,
}) => {
  return (
    <Drawer open={isOpen} onOpenChange={setIsOpen}>
      <DrawerContent className="rounded-t-xl bg-white z-50">
        <div className="mx-auto w-full max-w-md z-50">
          <DrawerHeader className="px-6 pt-6 pb-0">
            <div className="flex justify-center mb-4">
              <Image
                src="/images/landing/tricycle-usecase.png"
                alt="Vehicle"
                width={120}
                height={80}
                className="object-contain"
              />
            </div>
            <div className="flex justify-between items-center">
              <div>
                <DrawerTitle className="text-xl font-bold">
                  {vehicle.id}
                </DrawerTitle>
                <div className="flex items-center mt-1">
                  <div
                    className="w-3 h-3 rounded-full mr-2"
                    style={{
                      backgroundColor: getMarkerColor(vehicle.status),
                    }}
                  />
                  <span className="text-sm capitalize">{vehicle.status}</span>
                </div>
              </div>

              <div className="flex flex-col items-center gap-1">
                <UserRound fill="black" />
                <div className="font-semibold text-xs">Passengers</div>
                <div className="text-xl font-bold text-green-500">
                  {vehicle.passengers}
                </div>
              </div>
            </div>

            <div className="flex items-center justify-between mt-2">
              <DrawerDescription className="text-gray-500 mt-1">
                {vehicle.status === "moving"
                  ? "Currently moving"
                  : vehicle.status === "idle"
                  ? "Currently idle"
                  : "Inactive"}
              </DrawerDescription>
              {vehicle.status === "moving" && (
                <div className="flex gap-2 items-center text-sm">
                  <CircleGauge className="text-green-500" />
                  {vehicle.speed} Km/h
                </div>
              )}
            </div>

            <div className="mt-6 grid grid-cols-3 gap-6">
              <div className="bg-red-50 rounded-lg p-4 flex flex-col items-center justify-between">
                <Clock className="text-red-500 mb-1" size={20} />
                <div>
                  <div className="text-lg font-bold">
                    {formatDriving(
                      vehicle.driving.hours,
                      vehicle.driving.minutes
                    )}
                  </div>
                  <div className="text-xs text-gray-500">Driving</div>
                </div>
              </div>

              <div className="bg-red-50 rounded-lg p-4 flex flex-col items-center justify-between">
                <svg
                  width="33"
                  height="33"
                  viewBox="0 0 33 33"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M5.33008 0.435547C3.14258 0.435547 0.952344 2.07617 0.952344 5.35742L5.33008 14.1074L9.70508 5.35742C9.70508 2.07617 7.51758 0.435547 5.33008 0.435547ZM24.6279 3.10156C24.1562 3.12139 23.6982 3.21094 23.3154 3.29297L23.5752 4.49609C23.958 4.41064 24.3545 4.35664 24.6895 4.33203L24.6279 3.10156ZM5.33008 3.16992C6.54004 3.16992 7.51758 4.14951 7.51758 5.35742C7.51758 6.56738 6.54004 7.54492 5.33008 7.54492C4.12217 7.54492 3.14258 6.56738 3.14258 5.35742C3.14258 4.14951 4.12217 3.16992 5.33008 3.16992ZM25.9883 3.18359L25.7832 4.39355C26.1182 4.46396 26.4531 4.55215 26.7471 4.72852L27.3418 3.64844C26.9248 3.42627 26.46 3.22666 25.9883 3.18359ZM22.0576 3.6416C21.6406 3.8043 21.2236 3.9499 20.8682 4.09277L21.3535 5.2207C21.7295 5.06074 22.126 4.92129 22.4609 4.80371L22.0576 3.6416ZM28.4629 4.55762L27.5264 5.35742C27.7725 5.63906 27.9639 5.98633 28.1143 6.2666L29.2148 5.71289C28.9824 5.26514 28.7773 4.92607 28.4629 4.55762ZM19.7266 4.61914C19.3096 4.83174 18.9678 5.02109 18.5986 5.20703L19.2002 6.28711C19.5557 6.08203 19.9453 5.88379 20.2598 5.72656L19.7266 4.61914ZM17.5186 5.84277C17.1562 6.05469 16.8008 6.2666 16.4521 6.49902L17.1221 7.52441C17.457 7.30566 17.8057 7.10059 18.1475 6.89551L17.5186 5.84277ZM29.6387 7.06641C29.2354 7.13477 28.8252 7.18262 28.4219 7.23047C28.4492 7.57227 28.4287 7.94141 28.3604 8.22852L29.5566 8.50879C29.625 8.0166 29.6865 7.51074 29.6387 7.06641ZM15.4131 7.18262C15.0713 7.41504 14.7363 7.6543 14.3945 7.88672L15.1055 8.8916C15.4336 8.65234 15.7686 8.42676 16.1035 8.19434L15.4131 7.18262ZM13.3896 8.625C13.0479 8.87109 12.6924 9.14453 12.3984 9.37012L13.1436 10.3477C13.5195 10.0742 13.7793 9.86914 14.1211 9.61621L13.3896 8.625ZM27.9502 9.17188C27.7451 9.48633 27.5059 9.80078 27.2666 10.04L28.1621 10.8945C28.4561 10.5459 28.7705 10.1904 28.9893 9.83496L27.9502 9.17188ZM11.4209 10.1357C11.0859 10.3955 10.751 10.6621 10.457 10.9082L11.2363 11.8584C11.5576 11.5918 11.8857 11.3184 12.1865 11.0996L11.4209 10.1357ZM26.4189 10.8262C26.1045 11.0791 25.7764 11.3252 25.4756 11.5303L26.1797 12.542C26.542 12.2959 26.8975 12.0293 27.2051 11.7832L26.4189 10.8262ZM9.50684 11.708C9.18555 11.9678 8.87793 12.2412 8.56348 12.5078L9.36328 13.4443C9.6709 13.1777 9.97852 12.9111 10.293 12.6514L9.50684 11.708ZM24.4707 12.1865C24.1221 12.3916 23.7598 12.6035 23.4316 12.7812L24.0195 13.8682C24.3887 13.6426 24.8057 13.4443 25.1133 13.2393L24.4707 12.1865ZM7.62695 13.3213C7.31934 13.5947 7.01855 13.8682 6.71094 14.1484L7.53809 15.0645C7.83887 14.791 8.14648 14.5176 8.44727 14.2441L7.62695 13.3213ZM22.3584 13.3486C21.9961 13.5264 21.6338 13.7109 21.2715 13.8887L21.7979 14.9961C22.2217 14.791 22.5361 14.6201 22.9189 14.4424L22.3584 13.3486ZM20.1709 14.4014C19.7949 14.5723 19.4326 14.7363 19.0498 14.8936L19.5488 16.0215C19.9248 15.8574 20.3008 15.6865 20.6768 15.5156L20.1709 14.4014ZM5.80859 14.9961C5.45996 15.3037 5.21729 15.543 4.89941 15.8506L5.76758 16.7393C6.08887 16.4316 6.34863 16.165 6.64941 15.9053L5.80859 14.9961ZM17.9287 15.3926C17.5527 15.5498 17.1768 15.7139 16.8008 15.8711L17.2793 17.0127C17.6621 16.8555 18.0381 16.6914 18.4141 16.5273L17.9287 15.3926ZM15.666 16.3496C15.29 16.5137 14.9141 16.6777 14.5312 16.8281L15.0098 17.9697C15.3857 17.8125 15.7686 17.6484 16.1445 17.4912L15.666 16.3496ZM28.2988 16.8418C26.1113 16.8418 23.9238 18.4824 23.9238 21.7637L28.2988 30.5137L32.6738 21.7637C32.6738 18.4824 30.4863 16.8418 28.2988 16.8418ZM13.3965 17.3066C13.0068 17.4844 12.5967 17.6484 12.2617 17.792L12.7471 18.9268C13.1504 18.7559 13.5332 18.5918 13.875 18.4414L13.3965 17.3066ZM11.127 18.2773C10.7578 18.4482 10.3271 18.6396 9.99902 18.79L10.5049 19.9111C10.9082 19.7334 11.2637 19.5557 11.6191 19.4053L11.127 18.2773ZM8.87109 19.3027C8.48828 19.4873 8.0918 19.6787 7.75 19.8496L8.30371 20.9502C8.67285 20.7588 9.05566 20.5811 9.39062 20.417L8.87109 19.3027ZM28.2988 19.5762C29.5088 19.5762 30.4863 20.5537 30.4863 21.7637C30.4863 22.9736 29.5088 23.9512 28.2988 23.9512C27.0889 23.9512 26.1113 22.9736 26.1113 21.7637C26.1113 20.5537 27.0889 19.5762 28.2988 19.5762ZM6.64258 20.417C6.28027 20.6152 5.91797 20.8203 5.54883 21.0322L6.16406 22.0986C6.5127 21.8936 6.86816 21.7021 7.22363 21.5107L6.64258 20.417ZM4.47559 21.6953C4.09209 21.9141 3.72158 22.208 3.40234 22.4199L4.14746 23.4043C4.48721 23.1582 4.85293 22.9053 5.14551 22.7275L4.47559 21.6953ZM2.43164 23.2402C2.10352 23.541 1.78018 23.8896 1.5293 24.1836L2.46582 24.9834C2.729 24.6621 2.95801 24.4229 3.26562 24.1494L2.43164 23.2402ZM17.3203 23.3291L17.4297 24.5527C17.7852 24.4912 18.1406 24.5322 18.4961 24.5869L18.708 23.377C18.2568 23.3086 17.7783 23.2607 17.3203 23.3291ZM14.7773 24.0127L15.2422 25.1543C15.5977 24.9971 15.9668 24.874 16.3428 24.7578C16.2129 24.3682 16.1172 23.9717 16.0146 23.5752C15.584 23.6982 15.1533 23.8623 14.7773 24.0127ZM20.0752 23.9512L19.3779 24.9629C19.665 25.1748 19.9453 25.4004 20.1709 25.6807L21.1006 24.874C20.752 24.5186 20.4854 24.1836 20.0752 23.9512ZM13.6152 24.5664C13.2393 24.7578 12.877 24.9766 12.5146 25.1885L13.1367 26.248C13.4922 26.0566 13.8408 25.8311 14.1895 25.6465L13.6152 24.5664ZM0.778027 25.3184C0.571582 25.7627 0.404102 26.2412 0.326172 26.665L1.53613 26.877C1.60996 26.4873 1.71592 26.207 1.87109 25.8721C1.4958 25.708 1.1376 25.5098 0.778027 25.3184ZM11.4482 25.8516C11.0996 26.0771 10.7578 26.3027 10.416 26.5352L11.0996 27.5605C11.4414 27.335 11.7764 27.1025 12.1182 26.877L11.4482 25.8516ZM21.8867 25.9336L20.8545 26.6035C21.0732 26.9316 21.2852 27.2734 21.4834 27.6221L22.5498 27.0068C22.3105 26.624 22.1396 26.2822 21.8867 25.9336ZM9.39746 27.2324C9.05567 27.458 8.71387 27.6768 8.37891 27.916L9.0625 28.9414C9.39062 28.7021 9.73926 28.4766 10.0879 28.2441L9.39746 27.2324ZM1.5498 27.8818C1.154 27.9639 0.754785 28.0322 0.356934 28.1074C0.428711 28.5859 0.620801 29.0508 0.794434 29.4199L1.90527 28.8867C1.75693 28.5449 1.61611 28.1895 1.5498 27.8818ZM23.1582 28.0732L22.0918 28.6885C22.3037 29.0576 22.5498 29.4541 22.748 29.7686L23.7803 29.1055C23.5479 28.7432 23.3496 28.4014 23.1582 28.0732ZM7.36719 28.5859C7.02539 28.7979 6.69043 29.0029 6.33496 29.2012L6.94336 30.2744C7.30566 30.0625 7.66797 29.8506 8.0166 29.625L7.36719 28.5859ZM2.49316 29.7002L1.65234 30.6025C2.03242 30.9648 2.50137 31.2041 3.0127 31.3135L3.28613 30.1172C2.98262 30.0557 2.69893 29.9053 2.49316 29.7002ZM5.2959 29.7207C4.95342 29.8779 4.59795 30.001 4.22949 30.0762L4.50977 31.2793C4.94863 31.1904 5.36152 31.0264 5.77441 30.8555L5.2959 29.7207ZM24.457 30.0488L23.5068 30.8213C23.8008 31.1836 24.1631 31.5322 24.4775 31.7783L25.2363 30.8076C24.9355 30.5752 24.6758 30.2949 24.457 30.0488ZM26.1045 31.2451L25.7969 32.4414C26.3369 32.5508 26.7402 32.585 27.2461 32.5303L27.0957 31.3066C26.7607 31.3613 26.4326 31.3271 26.1045 31.2451Z"
                    fill="#EA5016"
                  />
                </svg>
                <div>
                  <div className="text-lg font-bold">
                    {vehicle.distance}
                    <span className="text-sm">km</span>
                  </div>
                  <div className="text-xs text-gray-500">Distance</div>
                </div>
              </div>

              <div className="bg-red-50 rounded-lg p-4 flex flex-col items-center justify-between">
                <MapPin className="text-red-500 mb-1" size={20} />
                <div>
                  <div className="text-lg font-bold">
                    {vehicle.mileage}
                    <span className="text-sm">Km/l</span>
                  </div>
                  <div className="text-xs text-gray-500">Mileage</div>
                </div>
              </div>
            </div>
          </DrawerHeader>

          <DrawerFooter className="pt-4 pb-6 px-6 flex items-center">
            <Button
              className="py-2 px-6 w-min rounded-lg bg-black text-white"
              onClick={() => onViewVehicle(vehicle.id)}
            >
              View Vehicle
            </Button>
          </DrawerFooter>
        </div>
      </DrawerContent>
    </Drawer>
  );
};

export default VehicleDrawer;
